# BingoScape Next Environment Configuration
# =============================================
# Create a copy of this file named ".env.local" and populate with your values
# This file is committed to version control - do not add secrets here

# When adding new environment variables, update the schema in "/src/env.js"

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# PostgreSQL connection string
# Development: Use local PostgreSQL instance
# Production: Use connection pooling for scalability
DATABASE_URL="postgresql://postgres:password@localhost:5432/bingoscape-next"

# Production example with connection pooling:
# DATABASE_URL="postgresql://user:pass@host:port/db?pgbouncer=true&connection_limit=10"

# ==============================================
# NEXTAUTH CONFIGURATION
# ==============================================

# NextAuth secret key - CRITICAL: Must be secure in production
# Generate with: openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET="your-secure-secret-key-here"

# Application URL - must match your deployment URL
# Development: http://localhost:3000
# Production: https://your-domain.com
NEXTAUTH_URL="http://localhost:3000"

# ==============================================
# DISCORD OAUTH CONFIGURATION
# ==============================================

# Discord application credentials
# Create at: https://discord.com/developers/applications
# Set redirect URL to: {NEXTAUTH_URL}/api/auth/callback/discord

DISCORD_CLIENT_ID="your-discord-client-id"
DISCORD_CLIENT_SECRET="your-discord-client-secret"

# ==============================================
# OPTIONAL: MONITORING & DEVELOPMENT
# ==============================================

# Node environment (automatically set by deployment platforms)
# NODE_ENV="development"

# Skip environment validation (useful for Docker builds)
# SKIP_ENV_VALIDATION="true"

# Sentry DSN for error monitoring (production recommended)
# Get from: https://sentry.io/settings/projects/
# SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"

# ==============================================
# SETUP INSTRUCTIONS
# ==============================================

# 1. Copy this file: cp .env.example .env.local
# 2. Set up PostgreSQL database (or use Docker: docker-compose up -d)
# 3. Create Discord application at https://discord.com/developers/applications
# 4. Generate NEXTAUTH_SECRET: openssl rand -base64 32
# 5. Run database migrations: npm run db:migrate
# 6. Start development server: npm run dev

# For production deployment, ensure all secrets are properly secured!
